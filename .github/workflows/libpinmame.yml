name: libpinmame
on:
  push:

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v2
      - id: version
        run: |
          VERSION=$(grep -o "[0-9\.]\+" src/version.c | head -1)
          echo "::set-output name=version::${VERSION}"

  build-win-x64:
    runs-on: windows-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd cmake/libpinmame
          copy CMakeLists_win-x64.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A x64 .
          cmake --build . --config Release
      - uses: svenstaro/upx-action@v2
        with:
          file: cmake/libpinmame/lib/libpinmame-${{ needs.version.outputs.version }}.dll
          args: --best --lzma
      - uses: actions/upload-artifact@v2
        with:
          name: libpinmame-win-x64
          path: cmake/libpinmame/lib/libpinmame-${{ needs.version.outputs.version }}.dll
          
  build-win-x86:
    runs-on: windows-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd cmake/libpinmame
          copy CMakeLists_win-x86.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A Win32 .
          cmake --build . --config Release
      - uses: svenstaro/upx-action@v2
        with:
          file: cmake/libpinmame/lib/libpinmame-${{ needs.version.outputs.version }}.dll
          args: --best --lzma
      - uses: actions/upload-artifact@v2
        with:
          name: libpinmame-win-x86
          path: cmake/libpinmame/lib/libpinmame-${{ needs.version.outputs.version }}.dll

  build-win-arm64:
    runs-on: windows-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd cmake/libpinmame
          copy CMakeLists_win-arm64.txt CMakeLists.txt
          cmake -G "Visual Studio 16 2019" -A ARM64 .
          cmake --build . --config Release
      - uses: actions/upload-artifact@v2
        with:
          name: libpinmame-win-arm64
          path: cmake/libpinmame/lib/libpinmame-${{ needs.version.outputs.version }}.dll
        
  build-osx-x64:
    runs-on: macos-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd cmake/libpinmame
          cp CMakeLists_osx-x64.txt CMakeLists.txt
          cmake -DCMAKE_BUILD_TYPE=Release .
          cmake --build . 
      - uses: actions/upload-artifact@v2
        with:
          name: libpinmame-osx-x64
          path: cmake/libpinmame/lib/libpinmame.${{ needs.version.outputs.version }}.dylib

  build-linux-x64:
    runs-on: ubuntu-latest
    needs: [ version ]
    steps:
      - uses: actions/checkout@v2
      - name: Build
        run: |
          cd cmake/libpinmame
          cp CMakeLists_linux-x64.txt CMakeLists.txt
          cmake -DCMAKE_BUILD_TYPE=Release . 
          cmake --build .
      - uses: svenstaro/upx-action@v2
        with:
          file: cmake/libpinmame/lib/libpinmame.so.${{ needs.version.outputs.version }}
          args: --best --lzma
      - uses: actions/upload-artifact@v2
        with:
          name: libpinmame-linux-x64
          path: cmake/libpinmame/lib/libpinmame.so.${{ needs.version.outputs.version }}

  dispatch:
    runs-on: ubuntu-latest
    needs: [ build-win-x64, build-win-x86, build-win-arm64, build-osx-x64, build-linux-x64 ]
    if: github.repository == 'vpinball/pinmame' && github.ref == 'refs/heads/master' && github.event_name == 'push'
    steps:
      - uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_PINMAME_DOTNET }}
          repository: VisualPinball/pinmame-dotnet
          event-type: update-libpinmame
          client-payload: '{"run_id": "${{ github.run_id }}"}'
