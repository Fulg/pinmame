name: vpinmame
on:
  push:

env:
  VERSION_START_SHA: e87be0e3cfa66411976ca04a72dd29e36c483966
#  UPX_ARTIFACT: 345209471

defaults:
  run:
    shell: bash

jobs:
  dxsdk:
    name: DirectX SDK
    runs-on: windows-latest
    steps:
      - id: cache
        uses: actions/cache@v2
        with:
          path: DXSDK
          key: cache-dxsdk
      - name: Create Cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -sL https://download.microsoft.com/download/a/e/7/ae743f1f-632b-4809-87a9-aa1bb3458e31/DXSDK_Jun10.exe -o DXSDK_Jun10.exe
          7z x DXSDK_Jun10.exe DXSDK/Include -otmp
          7z x DXSDK_Jun10.exe DXSDK/Lib -otmp
          mv tmp/DXSDK DXSDK
          rm -fR DXSDK_Jun10.exe tmp
          ls -Ra DXSDK

  version:
    name: Version
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version.outputs.tag }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: version
        run: |
          VERSION=$(grep -Eo "[0-9\.]+" src/version.c | head -1)
          REVISION=$(git rev-list ${{ env.VERSION_START_SHA }}..HEAD --count)
          SHA7="${GITHUB_SHA::7}"
          TAG="${VERSION}-${REVISION}-${SHA7}"
          echo "::set-output name=tag::${TAG}"

  build:
    name: Build VPinMAME${{ matrix.artifact-suffix }}-${{ matrix.platform }}
    runs-on: windows-2019
    needs: [ dxsdk, version ]
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: win-x64
            platform-name: x64
            vpinmame: VPinMAME64.dll
            setup: Setup64.exe
            bass: x64/Bass64.dll
          - platform: win-x64
            platform-name: x64
            vpinmame: VPinMAME64.dll
            setup: Setup64.exe
            bass: x64/Bass64.dll
            artifact-suffix: -sc
            extra-flags: -D CMAKE_CXX_FLAGS=//DSAM_INCLUDE_COLORED
          - platform: win-x86
            platform-name: Win32
            vpinmame: VPinMAME.dll
            setup: Setup.exe
            bass: Bass.dll
          - platform: win-x86
            platform-name: Win32
            vpinmame: VPinMAME.dll
            setup: Setup.exe
            bass: Bass.dll
            artifact-suffix: -sc
            extra-flags: -D CMAKE_CXX_FLAGS=//DSAM_INCLUDE_COLORED
    steps:
      - uses: actions/checkout@v3
      - uses: ilammy/setup-nasm@v1
      - uses: actions/cache@v2
        with:
          path: DXSDK
          key: cache-dxsdk
#      - run: |
#          curl -sL -H "Authorization: Token ${{ secrets.GH_PAT }}" https://api.github.com/repos/upx/upx/actions/artifacts/${{ env.UPX_ARTIFACT }}/zip -o upx.zip
#          7z x upx.zip -oupx
#          rm upx.zip
      - name: Build VPinMAME${{ matrix.artifact-suffix }}-${{ matrix.platform }}
        run: |
          export DXSDK_DIR="${GITHUB_WORKSPACE}/DXSDK"
          cp cmake/vpinmame/CMakeLists_${{ matrix.platform }}.txt CMakeLists.txt
          cmake ${{ matrix.extra-flags }} -T v141_xp -G "Visual Studio 16 2019" -A ${{ matrix.platform-name }} -B build/vpinmame
          cmake --build build/vpinmame --config Release
          # ./upx/upx.exe --best --lzma build/vpinmame/Release/${{ matrix.vpinmame }}
          cp cmake/instvpm/CMakeLists_${{ matrix.platform }}.txt CMakeLists.txt
          cmake -T v141_xp -G "Visual Studio 16 2019" -A ${{ matrix.platform-name }} -B build/instvpm
          cmake --build build/instvpm --config Release
      - run: |
          mkdir tmp
          cp build/vpinmame/Release/${{ matrix.vpinmame }} tmp
          cp build/instvpm/Release/${{ matrix.setup }} tmp
          cp ext/bass/${{ matrix.bass }} tmp
          cp release/VPMAlias.txt tmp
          cp release/license.txt tmp
          cp release/whatsnewVPM.txt tmp
      - uses: actions/upload-artifact@v3
        with:
          name: VPinMAME${{ matrix.artifact-suffix }}-${{ needs.version.outputs.tag }}-${{ matrix.platform }}
          path: tmp
